name: Android APK Build & Release
on:
  push:
    branches: [master]
  pull_request:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Java (Gradle needs it)
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3. Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 4. Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      # 5. Install dependencies
      - name: Install dependencies
        run: npm install

      # 6. Read app version
      - name: Read app version
        run: |
          APP_VERSION=$(node -p "require('./package.json').version")
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Generate debug.keystore if missing
        run: |
          if [ ! -f android/app/debug.keystore ]; then
            keytool -genkeypair -v \
              -keystore android/app/debug.keystore \
              -storepass android \
              -alias androiddebugkey \
              -keypass android \
              -keyalg RSA \
              -keysize 2048 \
              -validity 10000 \
              -dname "CN=Android Debug,O=Android,C=US"
          fi

      # 7. Build APK (Release)
      - name: Build Android APK (Release)
        run: |
          cd android
          ./gradlew assembleRelease

      # 8. Upload Release APK as artifact
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ env.APP_VERSION }}
          path: android/app/build/outputs/apk/release/app-release.apk

      # 9. Create GitHub Release
      - name: Create GitHub Release
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.APP_VERSION }}
          name: Release v${{ env.APP_VERSION }}
          files: |
            android/app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
